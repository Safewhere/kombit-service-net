//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kombit.Samples.Consumer.Service {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Kombit.Samples.Common.Binding.Data")]
    public partial class FrameworkFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string detailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
                this.RaisePropertyChanged("Details");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://kombit.samples.local/", ConfigurationName="Service.Provider")]
    public interface Provider {
        
        // CODEGEN: Generating message contract since the wrapper name (Ping) of message Ping does not match the default value (structure)
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://kombit.samples.local/pingRequest", ReplyAction="http://kombit.samples.local/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Kombit.Samples.Consumer.Service.FrameworkFault), Action="http://kombit.samples.local/Provider/structureFrameworkFaultFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="FrameworkFault", Namespace="http://schemas.datacontract.org/2004/07/Kombit.Samples.Common.Binding.Data")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Kombit.Samples.Consumer.Service.PingResponse structure(Kombit.Samples.Consumer.Service.Ping request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://kombit.samples.local/pingRequest", ReplyAction="http://kombit.samples.local/PingResponse")]
        System.Threading.Tasks.Task<Kombit.Samples.Consumer.Service.PingResponse> structureAsync(Kombit.Samples.Consumer.Service.Ping request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:liberty:sb:2006-08")]
    public partial class LibertyFrameworkHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        private string profileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="urn:liberty:sb:profile")]
        public string profile {
            get {
                return this.profileField;
            }
            set {
                this.profileField = value;
                this.RaisePropertyChanged("profile");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Ping", WrapperNamespace="http://kombit.samples.local/", IsWrapped=true)]
    public partial class Ping {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:liberty:sb:2006-08")]
        public Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.kombit.dk/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://service.kombit.dk/")]
        public string structure;
        
        public Ping() {
        }
        
        public Ping(Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework, string structure) {
            this.Framework = Framework;
            this.structure = structure;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PingResponse", WrapperNamespace="http://kombit.samples.local/", IsWrapped=true)]
    public partial class PingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:liberty:sb:2006-08")]
        public Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kombit.samples.local/", Order=0)]
        public string structure;
        
        public PingResponse() {
        }
        
        public PingResponse(Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework, string structure) {
            this.Framework = Framework;
            this.structure = structure;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProviderChannel : Kombit.Samples.Consumer.Service.Provider, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderClient : System.ServiceModel.ClientBase<Kombit.Samples.Consumer.Service.Provider>, Kombit.Samples.Consumer.Service.Provider {
        
        public ProviderClient() {
        }
        
        public ProviderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProviderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Kombit.Samples.Consumer.Service.PingResponse Kombit.Samples.Consumer.Service.Provider.structure(Kombit.Samples.Consumer.Service.Ping request) {
            return base.Channel.structure(request);
        }
        
        public string structure(ref Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework, string structure1) {
            Kombit.Samples.Consumer.Service.Ping inValue = new Kombit.Samples.Consumer.Service.Ping();
            inValue.Framework = Framework;
            inValue.structure = structure1;
            Kombit.Samples.Consumer.Service.PingResponse retVal = ((Kombit.Samples.Consumer.Service.Provider)(this)).structure(inValue);
            Framework = retVal.Framework;
            return retVal.structure;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Kombit.Samples.Consumer.Service.PingResponse> Kombit.Samples.Consumer.Service.Provider.structureAsync(Kombit.Samples.Consumer.Service.Ping request) {
            return base.Channel.structureAsync(request);
        }
        
        public System.Threading.Tasks.Task<Kombit.Samples.Consumer.Service.PingResponse> structureAsync(Kombit.Samples.Consumer.Service.LibertyFrameworkHeader Framework, string structure) {
            Kombit.Samples.Consumer.Service.Ping inValue = new Kombit.Samples.Consumer.Service.Ping();
            inValue.Framework = Framework;
            inValue.structure = structure;
            return ((Kombit.Samples.Consumer.Service.Provider)(this)).structureAsync(inValue);
        }
    }
}
